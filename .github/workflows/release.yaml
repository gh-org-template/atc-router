---
  name: Release

  on:  # yamllint disable-line rule:truthy
    pull_request:
    push:
      branches:
      - main

  env:
    DESTDIR: /tmp/build
    LUA_LIB_DIR: /usr/local/openresty/lualib
    CARGO_NET_GIT_FETCH_WITH_CLI: true

  jobs:
    release:
      name: Create Release
      runs-on: ubuntu-latest
      outputs:
        published: ${{ steps.release.outputs.published }}
        release-git-tag: ${{ steps.release.outputs.release-git-tag }}
      steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - name: Release
        id: release
        uses: ahmadnassri/action-semantic-release@v2.1.10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    artifacts:
      needs: release
      name: Create Release Artifacts
      runs-on: ubuntu-latest
      env:
        RUST_BACKTRACE: full
      strategy:
        matrix:
          target:
            - x86_64-unknown-linux-gnu
            - aarch64-unknown-linux-gnu
            - x86_64-unknown-linux-musl
            - aarch64-unknown-linux-musl
      steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.app-token.outputs.token }}
      - name: Sync atc-router directory to root
        run: rsync -a --exclude '.git' --exclude '.github' --exclude 'node_modules' atc-router/ .
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: '-C target-feature=-crt-static'
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Install, Compress, and rename artifacts
        env:
          DESTDIR: ${{ env.DESTDIR }}
        run: |
          make install
          tar -C /tmp/build/ -czvf ${{ matrix.target }}.tar.gz .
      - name: LDD the library
        run: ldd /tmp/build/usr/local/openresty/lualib/libatc_router.so
      - name: Add Release Artifacts to the Github Release
        if: ${{ needs.release.outputs.published == 'true' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.release.outputs.release-git-tag }}
          files: ${{ matrix.target }}.tar.gz
